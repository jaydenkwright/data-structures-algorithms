{"componentChunkName":"component---node-modules-gatsby-theme-code-notes-src-templates-note-js","path":"/stock-prices","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Best Time to Buy and Sell Stock\",\n  \"emoji\": \"\",\n  \"tags\": [\"Arrays\", \"Dynamic Programming\"],\n  \"link\": \"https://leetcode.com/problems/best-time-to-buy-and-sell-stock/\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Say you have an array for which the ith element is the price of a given stock on day i.\"), mdx(\"p\", null, \"If you were only permitted to complete at most one transaction (i.e., buy one and sell one share of the stock), design an algorithm to find the maximum profit.\"), mdx(\"p\", null, \"Note that you cannot sell a stock before you buy one.\"), mdx(\"h3\", {\n    \"id\": \"example\"\n  }, \"Example\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"Input: [7,1,5,3,6,4]\\nOutput: 5\\nExplanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5. Not 7-1 = 6, as selling price needs to be larger than buying price.\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"var maxProfit = function(prices) {\\n    if(prices.length === 0) return 0\\n    let profit = 0\\n    let lowest = prices[0]\\n    for (let i = 1; i < prices.length; i++){\\n      if(prices[i] < lowest){\\n        lowest = prices[i]\\n      }\\n      if(prices[i] - lowest > profit){\\n        profit = prices[i] - lowest\\n      }\\n    }\\n    return profit\\n};\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Best Time to Buy and Sell Stock","tags":["Arrays","Dynamic Programming"],"emoji":"","link":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock/"},"fields":{"dateModified":"15th Jun 2020"},"parent":{"__typename":"File","name":"stock-prices","fileName":"stock-prices.md"}}},"pageContext":{"id":"18d01c02-dc71-54fa-ab70-b953b75c2d91","previous":{"id":"37fc87a8-6d9a-5f3b-92f8-c2776e0343a4","frontmatter":{"title":"Two Sum","tags":["Arrays","Hash Tables"]},"parent":{"name":"two-sum","base":"two-sum.md"}},"next":{"id":"16cf4cf9-9713-5d27-940f-de5dc9163c66","frontmatter":{"title":"Array Overview","tags":["Arrays","Data Structures"]},"parent":{"name":"arrays","base":"arrays.md"}},"hasUntagged":false,"basePath":"/"}}}