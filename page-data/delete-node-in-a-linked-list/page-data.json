{"componentChunkName":"component---node-modules-gatsby-theme-code-notes-src-templates-note-js","path":"/delete-node-in-a-linked-list","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Delete Node in a Linked List\",\n  \"emoji\": \"\",\n  \"tags\": [\"Linked List\", \"Solutions\"],\n  \"link\": \"https://leetcode.com/problems/delete-node-in-a-linked-list/\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Write a function to delete a node (except the tail) in a singly linked list, given only access to that node.\"), mdx(\"p\", null, \"Given linked list -- head = \", \"[4,5,1,9]\", \", which looks like following:\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://assets.leetcode.com/uploads/2018/12/28/237_example.png\",\n    \"alt\": \"Example\"\n  }))), mdx(\"h3\", {\n    \"id\": \"example\"\n  }, \"Example\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"Input: head = [4,5,1,9], node = 5\\nOutput: [4,1,9]\\nExplanation: You are given the second node with value 5, the linked list should become 4 -> 1 -> 9 after calling your function.\\n\")), mdx(\"h3\", {\n    \"id\": \"solution\"\n  }, \"Solution\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"class Solution:\\n    def deleteNode(self, node):\\n        node.val = node.next.val\\n        node.next = node.next.next\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Delete Node in a Linked List","tags":["Linked List","Solutions"],"emoji":"","link":"https://leetcode.com/problems/delete-node-in-a-linked-list/"},"fields":{"dateModified":"29th Jun 2020"},"parent":{"__typename":"File","name":"delete-node-in-a-linked-list","fileName":"delete-node-in-a-linked-list.md"}}},"pageContext":{"id":"08945ba3-ef27-53e7-b1be-439589563034","previous":null,"next":{"id":"a3aa6243-4188-5c35-80bf-da4e8331b2e1","frontmatter":{"title":"Reverse Linked List","tags":["Linked List","Solutions"]},"parent":{"name":"reverse-linked-list","base":"reverse-linked-list.md"}},"hasUntagged":false,"basePath":"/"}}}