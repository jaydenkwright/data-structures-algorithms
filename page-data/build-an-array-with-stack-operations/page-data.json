{"componentChunkName":"component---node-modules-gatsby-theme-code-notes-src-templates-note-js","path":"/build-an-array-with-stack-operations","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Build an Array With Stack Operations\",\n  \"emoji\": \"\",\n  \"tags\": [\"Stacks\", \"Solutions\"],\n  \"link\": \"https://leetcode.com/problems/build-an-array-with-stack-operations/\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Given an array target and an integer n. In each iteration, you will read a number from  list = {1,2,3..., n}.\"), mdx(\"p\", null, \"Build the target array using the following operations:\"), mdx(\"p\", null, \"Push: Read a new element from the beginning list, and push it in the array.\\nPop: delete the last element of the array.\\nIf the target array is already built, stop reading more elements.\\nYou are guaranteed that the target array is strictly increasing, only containing numbers between 1 to n inclusive.\"), mdx(\"p\", null, \"Return the operations to build the target array.\"), mdx(\"p\", null, \"You are guaranteed that the answer is unique.\"), mdx(\"h3\", {\n    \"id\": \"example\"\n  }, \"Example\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"Input: target = [1,3], n = 3\\nOutput: [\\\"Push\\\",\\\"Push\\\",\\\"Pop\\\",\\\"Push\\\"]\\nExplanation: \\nRead number 1 and automatically push in the array -> [1]\\nRead number 2 and automatically push in the array then Pop it -> [1]\\nRead number 3 and automatically push in the array -> [1,3]\\n\")), mdx(\"h3\", {\n    \"id\": \"solution\"\n  }, \"Solution\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"class Solution:\\n    def buildArray(self, target: List[int], n: int) -> List[str]:\\n        stack = []\\n        \\n        for i in range(1, target[-1]+1):\\n            if i in target:\\n                stack.append('Push')\\n            else:\\n                stack.append('Push')\\n                stack.append('Pop')\\n        return stack\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Build an Array With Stack Operations","tags":["Stacks","Solutions"],"emoji":"","link":"https://leetcode.com/problems/build-an-array-with-stack-operations/"},"fields":{"dateModified":"2nd Jul 2020"},"parent":{"__typename":"File","name":"build-an-array-with-stack-operations","fileName":"build-an-array-with-stack-operations.md"}}},"pageContext":{"id":"9e4dac08-f181-5dea-a39e-1f8fef038eb1","previous":null,"next":{"id":"9d578148-fc40-5a59-8323-ac6769fdc640","frontmatter":{"title":"Merge Two Sorted Lists","tags":["Linked List","Solutions"]},"parent":{"name":"merge-two-sorted-lists","base":"merge-two-sorted-lists.md"}},"hasUntagged":false,"basePath":"/"}}}