{"componentChunkName":"component---node-modules-gatsby-theme-code-notes-src-templates-note-js","path":"/merge-two-sorted-lists","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Merge Two Sorted Lists\",\n  \"emoji\": \"\",\n  \"tags\": [\"Linked List\", \"Solutions\"],\n  \"link\": \"https://leetcode.com/problems/merge-two-sorted-lists/\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Merge two sorted linked lists and return it as a new sorted list. The new list should be made by splicing together the nodes of the first two lists.\"), mdx(\"h3\", {\n    \"id\": \"example\"\n  }, \"Example\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"Input: 1->2->4, 1->3->4\\nOutput: 1->1->2->3->4->4\\n\")), mdx(\"h3\", {\n    \"id\": \"solution\"\n  }, \"Solution\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"class Solution:\\n    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:\\n        dummy = head = ListNode(0)\\n        while l1 and l2:\\n            if l1.val < l2.val:\\n                head.next = l1\\n                l1 = l1.next\\n            else:\\n                head.next = l2\\n                l2 = l2.next\\n            head = head.next\\n            \\n        if l1 != None:\\n            head.next = l1\\n            l1 = l1.next\\n        if l2 != None:\\n            head.next = l2\\n            l2 = l2.next\\n        return dummy.next\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Merge Two Sorted Lists","tags":["Linked List","Solutions"],"emoji":"","link":"https://leetcode.com/problems/merge-two-sorted-lists/"},"fields":{"dateModified":"2nd Jul 2020"},"parent":{"__typename":"File","name":"merge-two-sorted-lists","fileName":"merge-two-sorted-lists.md"}}},"pageContext":{"id":"9d578148-fc40-5a59-8323-ac6769fdc640","previous":null,"next":{"id":"7b959bdc-64de-5c1a-a3e9-78aef82030f2","frontmatter":{"title":"Baseball Game","tags":["Stacks","Solutions"]},"parent":{"name":"baseball-game","base":"baseball-game.md"}},"hasUntagged":false,"basePath":"/"}}}