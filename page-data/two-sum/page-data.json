{"componentChunkName":"component---node-modules-gatsby-theme-code-notes-src-templates-note-js","path":"/two-sum","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Two Sum\",\n  \"emoji\": \"\",\n  \"tags\": [\"Arrays\", \"Hash Tables\"],\n  \"link\": \"https://leetcode.com/problems/two-sum/\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Given an array of integers, return indices of the two numbers such that they add up to a specific target.\"), mdx(\"p\", null, \"You may assume that each input would have exactly one solution, and you may not use the same element twice.\"), mdx(\"h3\", {\n    \"id\": \"example\"\n  }, \"Example:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"Given nums = [2, 7, 11, 15], target = 9,\\n\\nBecause nums[0] + nums[1] = 2 + 7 = 9,\\nreturn [0, 1].\\n\")), mdx(\"h3\", {\n    \"id\": \"answer\"\n  }, \"Answer\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"var twoSum = function(nums, target) {\\n  if(nums.length === 0) return []\\n    let map = {}\\n    let answer = []\\n    for (let i = 0; i < nums.length; i++){\\n        let difference = target - nums[i]\\n        if(difference in map){\\n          answer[0] = i < map[difference] ? i : map[difference]\\n          answer[1] = i > map[difference] ? i : map[difference]\\n          return answer\\n        }\\n          map[nums[i]] = i\\n    }\\n    return answer\\n};\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Two Sum","tags":["Arrays","Hash Tables"],"emoji":"","link":"https://leetcode.com/problems/two-sum/"},"fields":{"dateModified":"14th Jun 2020"},"parent":{"__typename":"File","name":"two-sum","fileName":"two-sum.md"}}},"pageContext":{"id":"37fc87a8-6d9a-5f3b-92f8-c2776e0343a4","previous":null,"next":{"id":"afc692b5-ca9a-5ea0-bca9-f485cc2daa56","frontmatter":{"title":"Binary Tree Overview","tags":["Binary Trees","Data Structures"]},"parent":{"name":"binary","base":"binary.md"}},"hasUntagged":false,"basePath":"/"}}}